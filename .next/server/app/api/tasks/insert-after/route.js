"use strict";(()=>{var e={};e.id=795,e.ids=[795],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},4577:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},532:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>k,originalPathname:()=>g,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>l,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>f});var s={};r.r(s),r.d(s,{POST:()=>POST});var a=r(884),n=r(6132),o=r(5798),i=r(2429),u=r(8347);async function POST(e){try{let{matterId:t,newTaskId:r,newTaskName:s,insertAfterTaskId:a}=await e.json();if(!t||!r||!s||!a)return o.Z.json({success:!1,error:"All fields are required"},{status:400});let n=await (0,i.UE)(),d=n.getMatter(t);if(!d)return o.Z.json({success:!1,error:"Matter not found"},{status:404});let p=d.getTask(a);if(!p)return o.Z.json({success:!1,error:"Insert after task not found"},{status:404});let c=[];for(let[e,t]of Object.entries(d.tasks))t.dependencies.forEach((t,r)=>{t.targetTaskId===a&&c.push({taskId:e,dependencyIndex:r})});console.log(`Found ${c.length} tasks that depend on ${a}`);let l=0;for(let{taskId:e,dependencyIndex:t}of c){let s=d.getTask(e);s&&s.dependencies[t]&&(s.dependencies[t].targetTaskId=r,l++,console.log(`Updated ${e} to depend on ${r} instead of ${a}`))}let k=[{dependencyType:u.D1.TASK_COMPLETION,targetTaskId:a}],f=n.createTask(t,r,s,k);if(f.includes("not found")||f.includes("already exists"))return o.Z.json({success:!1,error:f},{status:400});return await (0,i.En)(n),o.Z.json({success:!0,message:`Task "${s}" inserted after "${p.name}"`,insertedTask:{taskId:r,name:s,dependsOn:p.name},updatedDependencies:{count:l,tasks:c.map(e=>e.taskId)}})}catch(e){return console.error("Error inserting task:",e),o.Z.json({success:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/tasks/insert-after/route",pathname:"/api/tasks/insert-after",filename:"route",bundlePath:"app/api/tasks/insert-after/route"},resolvedPagePath:"/Users/rahulmohankumar/Downloads/finch/app/api/tasks/insert-after/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:p,staticGenerationAsyncStorage:c,serverHooks:l,headerHooks:k,staticGenerationBailout:f}=d,g="/api/tasks/insert-after/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[585,429],()=>__webpack_exec__(532));module.exports=r})();